{"version":3,"sources":["components/cards/Cards.jsx","components/cardlist/Cardlist.jsx","components/searchbox/Searchbox.jsx","App.js","reportWebVitals.js","index.js"],"names":["Cards","props","className","src","angel","id","alt","name","email","Cardlist","angels","map","Searchbox","placeholder","handlechange","type","onChange","App","e","setState","searchField","target","value","state","fetch","then","res","json","users","this","filterAngels","filter","toLowerCase","includes","toLocaleLowerCase","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mSAGe,SAASA,EAAMC,GAC1B,OACI,sBAAKC,UAAU,QAAf,UACI,qBAAKC,IAAG,+BAA0BF,EAAMG,MAAMC,GAAtC,0BAAkEC,IAAI,WAC9E,6BAAKL,EAAMG,MAAMG,OACjB,6BAAKN,EAAMG,MAAMI,W,MCJd,SAASC,EAASR,GAC7B,OACI,qBAAKC,UAAU,WAAf,SAEED,EAAMS,OAAOC,KAAK,SAAAP,GAAK,OACrB,cAACJ,EAAD,CAAOI,MAAOA,GAAYA,EAAMC,S,MCN7B,SAASO,EAAT,GAAmD,IAA9BC,EAA6B,EAA7BA,YAAaC,EAAgB,EAAhBA,aAC7C,OACI,qBAAKZ,UAAU,YAAf,SACI,uBAAOa,KAAK,SAASF,YAAcA,EAAcG,SAAWF,M,ICiCzDG,E,kDAjCb,aAAc,IAAD,8BACX,gBAaFH,aAAe,SAAAI,GAAC,OAAI,EAAKC,SAAS,CAAEC,YAAaF,EAAEG,OAAOC,SAZxD,EAAKC,MAAQ,CACXb,OAAQ,GACRU,YAAa,IAJJ,E,qDAQb,WAAoB,IAAD,OACjBI,MAAM,8CACLC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GAAK,OAAI,EAAKT,SAAS,CAAET,OAAQkB,S,oBAKzC,WACE,MAAgCC,KAAKN,MAA7Bb,EAAR,EAAQA,OAAQU,EAAhB,EAAgBA,YACVU,EAAepB,EAAOqB,QAAQ,SAAA3B,GAAK,OAAIA,EAAMG,KAAKyB,cAAcC,SAASb,EAAYc,wBAC3F,OACE,sBAAKhC,UAAU,MAAf,UACE,6CAEA,cAACU,EAAD,CAAWC,YAAY,gBAAgBC,aAAee,KAAKf,eAE3D,cAACL,EAAD,CAAUC,OAAQoB,W,GA1BRK,aCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.7b0e1bf3.chunk.js","sourcesContent":["import React from 'react'\nimport './cards.css'\n\nexport default function Cards(props) {\n    return (\n        <div className=\"cards\">\n            <img src={`https://robohash.org/${props.angel.id}?set=set2&size=100x100`} alt=\"robots\"></img>\n            <h3>{props.angel.name}</h3>\n            <h4>{props.angel.email}</h4>\n        </div>\n    )\n}\n","import React from 'react'\nimport Cards from '../cards/Cards'\nimport './cardlist.css'\n\nexport default function Cardlist(props) {\n    return (\n        <div className=\"cardlist\">\n        {\n          props.angels.map( angel => (\n            <Cards angel={angel} key={angel.id}></Cards>\n          ) )\n        }\n        </div>\n    )\n}\n","import React from 'react'\nimport './searchbox.css'\n\nexport default function Searchbox({ placeholder, handlechange }) {\n    return (\n        <div className=\"searchbox\">\n            <input type=\"search\" placeholder={ placeholder } onChange={ handlechange }></input>\n        </div>\n    )\n}\n","import './App.css';\nimport { Component } from 'react';\nimport Cardlist from './components/cardlist/Cardlist';\nimport Searchbox from './components/searchbox/Searchbox';\n\nclass App extends Component {\n  constructor(){\n    super()\n    this.state = {\n      angels: [],\n      searchField: \"\"\n    }\n  }\n\n  componentDidMount(){\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(res => res.json())\n    .then(users => this.setState({ angels: users }))\n  }\n\n  handlechange = e => this.setState({ searchField: e.target.value })\n\n  render(){\n    const { angels, searchField } = this.state\n    const filterAngels = angels.filter( angel => angel.name.toLowerCase().includes(searchField.toLocaleLowerCase()) )\n    return (\n      <div className=\"App\">\n        <h1>REACT BASIC</h1>\n\n        <Searchbox placeholder=\"search robots\" handlechange={ this.handlechange }></Searchbox>\n\n        <Cardlist angels={filterAngels}></Cardlist>\n\n      </div>\n    );\n  }\n  \n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}